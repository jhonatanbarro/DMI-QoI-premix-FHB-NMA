filter(AI2 %in% target) %>%
mutate(n2 = n()) %>%
filter(n2 != 1)
# Renaming the treatments
library(plyr)
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("check-0" = "AACHECK"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Azoxistrobina + Tebuconazole-2" = "AZOX + TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Piraclostrobina + Metconazole-2" = "PYRA + METC 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Tebuconazole-2" = "TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Trifloxistrobina + Protioconazole-2" = "TFLX + PROT 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Trifloxistrobina + Tebuconazole-2" = "TFLX + TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Piraclostrobina + Metconazole-1" = "PYRA + METC 1X"))
detach("package:plyr", unload = TRUE)
# Sampling variance for log of the mean (Paul et al., 2008) to use in multivariate model
fhb_yld <- fhb_yld%>%
mutate(log_yld = log(yld))
fhb_yld$log_var_yld <- with(fhb_yld, V_yld / (n * yld^2))
# Calculate the variation of absolute yield
fhb_yld$var_yld <- fhb_yld$V_yld/fhb_yld$n # multivariate approach
library(metafor)
mv_yld <- rma.mv(yld, var_yld,
mods = ~AI2,
random = list(~AI2 | trial),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld
)
summary(mv_yld)
yield_res<- data.frame(cbind(mv_yld$b,
mv_yld$ci.lb,
mv_yld$ci.ub)) %>%
set_names("yld", "yld_inf", "yld_sup") %>%
mutate(fungicide = c("check", "AZOX + TEBU 2X", "PYRA + METC 1X", "PYRA + METC 2X", "TEBU 2X", "TFLX + PROT 2X", "TFLX + TEBU 2X")) %>%
filter(fungicide != "check")
yield_res
library(readr)
write_csv(yield_res, "data/yld_absolute.csv")
library(tidyverse)
efficacy_res <- read_csv("data/efficacy.csv")
sev_yld = full_join(efficacy_res, yield_res)
sev_yld
library(readr)
write_csv(sev_yld, "data/sev_yld.csv")
anova(mv_yld, L = rbind(
c(0, 1, -1, 0, 0, 0, 0),
c(0, 1, 0, -1, 0, 0, 0),
c(0, 1, 0, 0, -1, 0, 0),
c(0, 1, 0, 0, 0, -1, 0),
c(0, 1, 0, 0, 0, 0, -1),
c(0, 0, 1, -1, 0, 0, 0),
c(0, 0, 1, 0, -1, 0, 0),
c(0, 0, 1, 0, 0, -1, 0),
c(0, 0, 1, 0, 0, 0, -1),
c(0, 0, 0, 1, -1, 0, 0),
c(0, 0, 0, 1, 0, -1, 0),
c(0, 0, 0, 1, 0, 0, -1),
c(0, 0, 0, 0, 1, -1, 0),
c(0, 0, 0, 0, 1, 0, -1),
c(0, 0, 0, 0, 0, 1, -1)
))
mv_yld_relative <- rma.mv(log_yld, log_var_yld,
mods = ~AI2,
random = list(~AI2 | trial),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld
)
summary(mv_yld_relative)
results_relative_yld<- data.frame(cbind((exp(mv_yld_relative$b)-1)*100,
(exp(mv_yld_relative$ci.lb)-1)*100,
(exp(mv_yld_relative$ci.ub)-1)*100)) %>%
set_names("yld_rel", "yld_rel_inf", "yld_rel_sup") %>%
mutate(fungicide = c("check", "AZOX + TEBU 2X", "PYRA + METC 1X", "PYRA + METC 2X", "TEBU 2X", "TFLX + PROT 2X", "TFLX + TEBU 2X")) %>%
filter(fungicide != "check")
results_relative_yld
library(readr)
write_csv(results_relative_yld, "data/yld_relative.csv")
# Number of entries by fungicide and year
table(fhb_yld$AI2, fhb_yld$year)
mv_yld_year <- rma.mv(yld, var_yld,
mods = ~AI2*as.numeric(year),
random = list(~AI2 | factor(trial)),
struct = "HCS",
method = "ML",
data = fhb_yld %>% mutate(year = year-2000))
mv_yld_year
anova(mv_yld_year, btt=9:14)
library(tidyverse)
fhb_yld <- fhb_yld %>%
mutate(sev_check_class = case_when(
sev_check < 7 ~ "low",
sev_check >= 7 ~ "high"))
mv_dis_press <- rma.mv(yld, var_yld,
mods = ~AI2*factor(sev_check_class),
random = list(~AI2 | factor(trial)),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld
)
mv_dis_press
anova(mv_dis_press, btt=9:14)
mv_sev_check_cont <- rma.mv(yld, var_yld,
mods = ~AI2*as.numeric(sev_check),
random = list(~AI2 | factor(trial)),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld
)
mv_sev_check_cont
anova(mv_sev_check_cont, btt=9:14)
#Moderator yield_class
summary(fhb_yld$yld_check)
fhb_yld <- fhb_yld %>%
mutate(yld_check_class = case_when(
yld_check < 3000 ~ "low",
yld_check >= 3000 ~ "high"))
table(fhb_yld$AI2, fhb_yld$yld_check_class)
mv_yld_check <- rma.mv(yld, var_yld,
mods = ~AI2*factor(yld_check_class),
random = list(~AI2 | factor(trial)),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld
)
mv_yld_check
anova(mv_yld_check, btt=9:14)
library(readr)
library(tidyverse)
library(janitor)
fhb_yld1 <- read_csv("data/dat-yld.csv")
target <- c("check-0", "Azoxistrobina + Tebuconazole-2", "Piraclostrobina + Metconazole-2", "Tebuconazole-2", "Trifloxistrobina + Protioconazole-2", "Trifloxistrobina + Tebuconazole-2", "Piraclostrobina + Metconazole-1")
fhb_yld <- fhb_yld1 %>%
group_by(trial) %>%
filter(AI2 %in% target) %>%
mutate(n2 = n()) %>%
filter(n2 != 1)
# Renaming the treatments
library(plyr)
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("check-0" = "AACHECK"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Azoxistrobina + Tebuconazole-2" = "AZOX + TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Piraclostrobina + Metconazole-2" = "PYRA + METC 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Tebuconazole-2" = "TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Trifloxistrobina + Protioconazole-2" = "TFLX + PROT 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Trifloxistrobina + Tebuconazole-2" = "TFLX + TEBU 2X"))
fhb_yld$AI2 <- revalue(fhb_yld$AI2, c("Piraclostrobina + Metconazole-1" = "PYRA + METC 1X"))
detach("package:plyr", unload = TRUE)
fhb_yld$var_yld <- fhb_yld$V_yld/fhb_yld$n # multivariate approach
library(tidyverse)
design1 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "TFLX + PROT 2X", "TFLX + TEBU 2X", "AZOX + TEBU 2X", "TEBU 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(1, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 6) %>%
filter(n3 == 6)
design1
design2 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "TFLX + PROT 2X", "TFLX + TEBU 2X", "AZOX + TEBU 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(2, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 5) %>%
filter(n3 == 5)
design2
design3 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "TEBU 2X","PYRA + METC 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(3, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 3) %>%
filter(n3 == 3)
design3
design4 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "TFLX + PROT 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(4, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 3) %>%
filter(n3 == 3)
design4
design5 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "TFLX + PROT 2X", "TFLX + TEBU 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(5, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 4) %>%
filter(n3 == 4)
design5
design6 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "PYRA + METC 1X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(6, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 3) %>%
filter(n3 == 3)
design6
design7 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "TEBU 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(7, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 2) %>%
filter(n3 == 2)
design7
design8 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(8, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 2) %>%
filter(n3 == 2)
design8
design9 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "TFLX + PROT 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(9, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 2) %>%
filter(n3 == 2)
design9
design10 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "PYRA + METC 1X",  "TEBU 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(10, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 4) %>%
filter(n3 == 4)
design10
design11 = fhb_yld %>%
group_by(trial) %>%
filter(AI2  %in% c("AACHECK", "PYRA + METC 2X", "PYRA + METC 1X", "TFLX + PROT 2X")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(11, length(AI2))) %>%
select(1:5,8:15,17:23) %>%
filter(n2 == 4) %>%
filter(n3 == 4)
design11
fhb_yld_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8, design9, design10, design11) %>%
group_by(trial)
fhb_yld_design
library(metafor)
mv_incon <- rma.mv(yld, var_yld,
mods = ~AI2 * design,
random = list(~ design / AI2 | factor(trial)),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = fhb_yld_design)
mv_incon
anova(mv_incon, btt = 9:14)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(patchwork)
fhb_base<- gsheet2tbl(
"https://docs.google.com/spreadsheets/d/1Kh0474vS9xCxwud6RSZgr7VeWEF7FAnYDSi3EMb_bYs/edit#gid=0", sheetid = "data-prod")
target <- c("check-0", "Azoxistrobina + Tebuconazole-2", "Piraclostrobina + Metconazole-2", "Piraclostrobina + Metconazole-1", "Trifloxistrobina + Protioconazole-2", "Trifloxistrobina + Tebuconazole-2", "Tebuconazole-2")
fhb2 <- fhb_base %>%
mutate(AI2 = paste(AI, n_spray, sep = "-")) %>%
filter(AI2 %in% target) %>%
filter(year != "NA") %>%
filter(AI2 != "NA") %>%
filter(sev != "NA") %>%
filter(sev > 0) %>%
filter(yld != "NA") %>%
filter(yld > 0)
# Renaming the treatments
library(plyr)
fhb2$AI2 <- revalue(fhb2$AI2, c("check-0" = "CHECK"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Azoxistrobina + Tebuconazole-2" = "AZOX + TEBU"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Piraclostrobina + Metconazole-2" = "PYRA + METC"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Tebuconazole-2" = "TEBU"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Trifloxistrobina + Protioconazole-2" = "TFLX + PROT"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Trifloxistrobina + Tebuconazole-2" = "TFLX + TEBU"))
fhb2$AI2 <- revalue(fhb2$AI2, c("Piraclostrobina + Metconazole-1" = "PYRA + METC 1X"))
detach("package:plyr", unload = TRUE)
fhb2 <- fhb2 %>%
mutate(state1 = case_when(
state == "PR" ~ "PR",
state == "RS" ~ "RS+SC",
state == "SC" ~ "RS+SC"))
## Log of the Effect-sizes
fhb2 <- fhb2 %>%
mutate(
log_sev = log(sev),
log_yld = log(yld))
hist_log_sev <- ggplot(fhb2, aes(log_sev)) +
geom_histogram(bins=20, fill = "steelblue", color = "white") +
theme_minimal_hgrid() +
xlab("log(FHB Index)")
hist_sev <- ggplot(fhb2, aes(sev)) +
geom_histogram(bins=20, fill = "steelblue", color = "white") +
theme_minimal_hgrid() +
xlab("FHB Index (%)")
hist_yld <- ggplot(fhb2, aes(yld)) +
geom_histogram(bins=20, fill = "steelblue", color = "white") +
theme_minimal_hgrid() +
xlab("Yield (Kg/ha)")
library(cowplot)
hist_plot <- plot_grid(hist_sev, hist_log_sev, hist_yld, labels = c("A", "B", "C"), nrow = 3, align = "V")
hist_plot
ggsave("Figures/histograms.png", width = 5, height = 8, dpi = 300)
fhb2 <- fhb2
fhb2$AI2 <- factor(fhb2$AI2, levels = c("CHECK", "AZOX + TEBU", "TFLX + TEBU", "TEBU", "TFLX + PROT", "PYRA + METC", "PYRA + METC 1X"))
box_sev <- ggplot(fhb2, aes(AI2, sev)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#83CAFF", alpha = 0.5) +
theme_minimal_hgrid()+
labs(x = "Fungicides", y = "FHB Index (%)") +
scale_y_continuous(breaks = c(0,20,40,60,80,100), limits = c(0,100))+
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12),
axis.title.y = element_text(size=14, face = "bold"))
box_sev
sev_year <- fhb2 %>%
filter(AI2 == "CHECK") %>%
ggplot(aes(factor(year), sev_check)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#83CAFF", alpha = 0.5) +
theme_minimal_hgrid()+
labs(x = "Crop Seasons", y = "FHB Index (%) in the CHECK") +
scale_y_continuous(breaks = c(0,20,40,60,80,100), limits = c(0,100))+
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12),
axis.title.y = element_text(size=14, face = "bold"))
sev_year
fhb2 <- fhb2
fhb2$AI2 <- factor(fhb2$AI2, levels = c("CHECK", "AZOX + TEBU", "TFLX + TEBU", "TEBU", "TFLX + PROT", "PYRA + METC", "PYRA + METC 1X"))
box_yld <- ggplot(fhb2, aes(AI2, yld)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#FF950E", alpha = 0.5) +
theme_minimal_hgrid()+
labs(x = "Fungicides", y = "Yield (kg/ha)") +
scale_y_continuous(breaks = c(0,1000,2000,3000,4000,5000,6000), limits = c(0, 6000))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12),
axis.text.y = element_text(size=12),
axis.title = element_text(size=14, face = "bold"))
box_yld
yld_year <- fhb2 %>%
filter(AI2 == "CHECK") %>%
ggplot(aes(factor(year), yld_check)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#FF950E", alpha = 0.5) +
theme_minimal_hgrid()+
labs(x = "Crop Seasons", y = "Yield (kg/ha) in the CHECK") +
scale_y_continuous(breaks = c(0,1000,2000,3000,4000,5000,6000), limits = c(0, 6000))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12),
axis.text.y = element_text(size=12),
axis.title = element_text(size=14, face = "bold"))
yld_year
library(patchwork)
((sev_year + labs(tag = 'A')) / yld_year) | ((box_sev + labs(tag = 'B')) / box_yld)
ggsave("Figures/Combo.png", width = 12, height = 10, dpi = 300)
state_sev <- fhb2 %>%
filter(AI2 == "CHECK") %>%
ggplot(aes(factor(year), sev_check)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#83CAFF", alpha = 0.5) +
theme_minimal_hgrid()+
scale_y_continuous(breaks = c(0,25,50,75,100), limits = c(0,100))+
theme(legend.position = "none",
strip.text.x = element_text(color = "white",size = 14, face = "bold"),
strip.background = element_rect(fill = "black"),
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(size=14, face = "bold"))+
labs(x = "Crop Seasons", y = "FHB Index in the CHECK (%)")+
facet_wrap(~state1, ncol = 1)
state_sev
state_yld <- fhb2 %>%
filter(AI2 == "CHECK") %>%
ggplot(aes(factor(year), yld_check)) +
geom_boxplot(size = 0.6, outlier.shape = NA) +
geom_jitter(width = 0.15, size = 2, color = "#FF950E", alpha = 0.5) +
theme_minimal_hgrid()+
labs(x = "Crop Seasons", y = "Yield in the CHECK (kg/ha)") +
scale_y_continuous(breaks = c(0,2000,4000,6000), limits = c(0, 6000))+
theme(strip.text.x = element_text(color = "white",size = 14, face = "bold"),
strip.background = element_rect(fill = "black"),
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(size=14, face = "bold"))+
facet_wrap(~state1, ncol = 1)
state_yld
library(patchwork)
state_sev + labs(tag = 'A') + state_yld + labs(tag = 'B')
ggsave("Figures/Box_state.png", width = 12, height = 8, dpi = 300)
library(palettetown)
sev_yld <- read_csv("data/sev_yld.csv")
sev_yld
# Renaming the treatments
library(plyr)
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("AZOX + TEBU 2X" = "AZOX + TEBU"))
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("PYRA + METC 2X" = "PYRA + METC"))
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("TEBU 2X" = "TEBU"))
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("TFLX + PROT 2X" = "TFLX + PROT"))
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("TFLX + TEBU 2X" = "TFLX + TEBU"))
sev_yld$fungicide <- revalue(sev_yld$fungicide, c("PYRA + METC 1X" = "PYRA + METC 1X"))
detach("package:plyr", unload = TRUE)
sev_yld %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA + METC", "TFLX + PROT", "TEBU", "AZOX + TEBU", "TFLX + TEBU",  "PYRA + METC 1X"))) %>%
ggplot(aes(efficacy, yld)) +
geom_errorbar(aes(ymin = yld_inf, ymax = yld_sup), width = 0, size = 0.8, color = "black", alpha = 0.35) +
geom_errorbarh(aes(xmin = eff_inf,xmax = eff_sup),  height = 0, size = 0.8, color = "black", alpha = 0.35)+
labs(x = "FHB control (%)", y = "Yield difference (kg/ha)", color = "Fungicide")+
geom_point(aes(efficacy, yld, color = fungicide), size= 3) +
scale_color_calc()+
theme_minimal_grid()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
legend.title = element_text(size=12, face = "bold"))
ggsave("Figures/sev_yld.png", width = 8, height = 5, dpi = 300)
library(gsheet)
wheat_price <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1Kh0474vS9xCxwud6RSZgr7VeWEF7FAnYDSi3EMb_bYs/edit#gid=1133011953")
wheat_price = wheat_price %>%
mutate(price_ton = ((price/60)*1000)/5.2)
mean(wheat_price$price_ton)
fhb_tetris <- gsheet2tbl(
"https://docs.google.com/spreadsheets/d/1Kh0474vS9xCxwud6RSZgr7VeWEF7FAnYDSi3EMb_bYs/edit#gid=1373111570",
sheetid = "tetris")
fhb_tetris <- fhb_tetris %>%
mutate(
tau = as.numeric(tau),
D = as.numeric(D)
)
prob <- function(C, P, tau, D) {
profit <- (D - (C / (P / 1000))) / sqrt(tau) # loss
prob_gain <- pnorm(profit)
ploss <- 1 - prob_gain
ploss
}
for (i in 1:length(fhb_tetris$C)) {
fhb_tetris$breacking_even[i] <- prob(C = fhb_tetris$C[i], D = fhb_tetris$D[i], tau = fhb_tetris$tau[i], P = fhb_tetris$P[i]) * 100
}
library(viridis)
library(tidyverse)
library(ggthemes)
dat <- fhb_tetris %>%
mutate(
breacking_even = as.numeric(breacking_even),
breacking_even = round(breacking_even, 1)
)
summary(dat$breacking_even)
library(plyr)
dat$fungicide <- revalue(dat$fungicide, c("AZOX + TEBU 2X" = "AZOX + TEBU"))
dat$fungicide <- revalue(dat$fungicide, c("PYRA + METC 2X" = "PYRA + METC"))
dat$fungicide <- revalue(dat$fungicide, c("TEBU 2X" = "TEBU"))
dat$fungicide <- revalue(dat$fungicide, c("PYRA + METC 1X" = "PYRA + METC 1X"))
detach("package:plyr", unload = TRUE)
dat %>%
filter(fungicide %in% c("PYRA + METC", "PYRA + METC 1X", "TEBU")) %>%
#mutate(fungicide = factor(fungicide, levels = c("PYRA + METC 2X", "AZOX + TEBU 2X","TEBU 2X"))) %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA + METC", "TEBU", "PYRA + METC 1X"))) %>%
mutate(breacking_even1 = case_when(
breacking_even >= 75 ~ "p \u2265 75  ",
breacking_even < 75 & breacking_even >= 65 ~ "65 \u2264 p < 75  ",
breacking_even < 65 & breacking_even >= 55 ~ "55 \u2264 p < 65  ",
breacking_even < 55 & breacking_even >= 45 ~ "45 \u2264 p < 55  ",
breacking_even < 45 ~ "0 \u2264 p < 45  "
)) %>%
ggplot(aes(factor(C), factor(P), z = breacking_even1, fill = breacking_even1, label = breacking_even1)) +
geom_tile(color = "white", size = 0.5) +
scale_fill_viridis(discrete = T, option = "E", begin = 0, end = 1, name = "Probability of not-offsetting costs (%)") +
scale_color_gradient(high = "white", low = "white") +
labs(x = "Fungicide + application cost (US$/ha)", y = "Wheat price (US$/ton) ", fill = "") +
theme_minimal() +
facet_wrap(~ fungicide, scales = "free", nrow=1) +
theme(axis.title = element_text(size = 12, face = "bold"),
legend.justification = "center",
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size = 14, face = "bold"),
strip.text.y = element_text(size = 14, face = "bold"),
panel.grid.minor = element_line(colour = "white"),
panel.grid.major = element_line(colour = "white"),
legend.position = "bottom")
ggsave("Figures/tetris.png", width = 9, height = 4, dpi = 300)
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
rmarkdown::render_site(encoding = 'UTF-8')
